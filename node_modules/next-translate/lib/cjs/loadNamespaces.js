"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var getConfig_1 = __importDefault(require("./getConfig"));
var getPageNamespaces_1 = __importDefault(require("./getPageNamespaces"));
var colorEnabled = process.env.NODE_DISABLE_COLORS == null &&
    process.env.NO_COLOR == null &&
    process.env.TERM !== 'dumb' &&
    process.env.FORCE_COLOR !== '0';
function loadNamespaces(config) {
    var _a, _b;
    if (config === void 0) { config = {}; }
    return __awaiter(this, void 0, void 0, function () {
        var conf, localesToIgnore, __lang, page, namespaces, defaultLoader, pageNamespaces, color;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    conf = __assign(__assign({}, (0, getConfig_1.default)()), config);
                    localesToIgnore = conf.localesToIgnore || ['default'];
                    __lang = ((_a = conf.req) === null || _a === void 0 ? void 0 : _a.locale) ||
                        conf.locale ||
                        ((_b = conf.router) === null || _b === void 0 ? void 0 : _b.locale) ||
                        conf.defaultLocale ||
                        '';
                    if (!conf.pathname) {
                        console.warn('ðŸš¨ [next-translate] You forgot to pass the "pathname" inside "loadNamespaces" configuration');
                        return [2, { __lang: __lang }];
                    }
                    if (localesToIgnore.includes(__lang))
                        return [2, { __lang: __lang }];
                    if (!conf.loaderName && conf.loader !== false) {
                        console.warn('ðŸš¨ [next-translate] You can remove the "loadNamespaces" helper, unless you set "loader: false" in your i18n config file.');
                    }
                    page = removeTrailingSlash(conf.pathname.replace(/\/index$/, '')) || '/';
                    return [4, (0, getPageNamespaces_1.default)(conf, page, conf)];
                case 1:
                    namespaces = _c.sent();
                    defaultLoader = function () { return Promise.resolve({}); };
                    return [4, Promise.all(namespaces.map(function (ns) {
                            return typeof conf.loadLocaleFrom === 'function'
                                ? conf.loadLocaleFrom(__lang, ns)
                                : defaultLoader(__lang, ns);
                        })).catch(function () { })];
                case 2:
                    pageNamespaces = (_c.sent()) || [];
                    if (conf.logBuild !== false && typeof window === 'undefined') {
                        color = function (c) { return (colorEnabled ? "\u001B[36m".concat(c, "\u001B[0m") : c); };
                        console.log(color('next-translate'), "- compiled page:", color(page), '- locale:', color(__lang), '- namespaces:', color(namespaces.join(', ')), '- used loader:', color(conf.loaderName || '-'));
                    }
                    return [2, {
                            __lang: __lang,
                            __namespaces: namespaces.reduce(function (obj, ns, i) {
                                obj[ns] = pageNamespaces[i] || null;
                                return obj;
                            }, {}),
                        }];
            }
        });
    });
}
exports.default = loadNamespaces;
function removeTrailingSlash(path) {
    if (path === void 0) { path = ''; }
    return path.length > 1 && path.endsWith('/') ? path.slice(0, -1) : path;
}
