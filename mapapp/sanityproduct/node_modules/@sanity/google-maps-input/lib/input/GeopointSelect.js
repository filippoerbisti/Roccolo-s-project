"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GeopointSelect = void 0;

var _react = _interopRequireDefault(require("react"));

var _SearchInput = require("../map/SearchInput");

var _Map = require("../map/Map");

var _Marker = require("../map/Marker");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var fallbackLatLng = {
  lat: 40.7058254,
  lng: -74.1180863
};

class GeopointSelect extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "mapRef", /*#__PURE__*/_react.default.createRef());

    _defineProperty(this, "handlePlaceChanged", place => {
      if (!place.geometry) {
        return;
      }

      this.setValue(place.geometry.location);
    });

    _defineProperty(this, "handleMarkerDragEnd", event => {
      this.setValue(event.latLng);
    });

    _defineProperty(this, "handleMapClick", event => {
      this.setValue(event.latLng);
    });
  }

  getCenter() {
    var _this$props = this.props,
        _this$props$value = _this$props.value,
        value = _this$props$value === void 0 ? {} : _this$props$value,
        _this$props$defaultLo = _this$props.defaultLocation,
        defaultLocation = _this$props$defaultLo === void 0 ? {} : _this$props$defaultLo;

    var point = _objectSpread(_objectSpread(_objectSpread({}, fallbackLatLng), defaultLocation), value);

    return point;
  }

  setValue(geoPoint) {
    if (this.props.onChange) {
      this.props.onChange(geoPoint);
    }
  }

  render() {
    var _this$props2 = this.props,
        api = _this$props2.api,
        defaultZoom = _this$props2.defaultZoom,
        value = _this$props2.value,
        onChange = _this$props2.onChange;
    return /*#__PURE__*/_react.default.createElement(_Map.GoogleMap, {
      api: api,
      location: this.getCenter(),
      onClick: this.handleMapClick,
      defaultZoom: defaultZoom
    }, map => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_SearchInput.SearchInput, {
      api: api,
      map: map,
      onChange: this.handlePlaceChanged
    }), value && /*#__PURE__*/_react.default.createElement(_Marker.Marker, {
      api: api,
      map: map,
      position: value,
      onMove: onChange ? this.handleMarkerDragEnd : undefined
    })));
  }

}

exports.GeopointSelect = GeopointSelect;

_defineProperty(GeopointSelect, "defaultProps", {
  defaultZoom: 8,
  defaultLocation: {
    lng: 10.74609,
    lat: 59.91273
  }
});