/// <reference types="googlemaps" />
import React from 'react';
import { LatLng } from '../types';
interface MapProps {
    api: typeof window.google.maps;
    location: LatLng;
    bounds?: google.maps.LatLngBounds;
    defaultZoom?: number;
    mapTypeControl?: boolean;
    scrollWheel?: boolean;
    controlSize?: number;
    onClick?: (event: google.maps.MapMouseEvent) => void;
    children?: (map: google.maps.Map) => React.ReactElement;
}
interface MapState {
    map: google.maps.Map | undefined;
}
export declare class GoogleMap extends React.PureComponent<MapProps, MapState> {
    static defaultProps: {
        defaultZoom: number;
        scrollWheel: boolean;
    };
    state: MapState;
    clickHandler: google.maps.MapsEventListener | undefined;
    mapRef: React.RefObject<HTMLDivElement>;
    mapEl: HTMLDivElement | null;
    componentDidMount(): void;
    attachClickHandler: () => void;
    componentDidUpdate(prevProps: MapProps): void;
    componentWillUnmount(): void;
    getCenter(): google.maps.LatLng;
    constructMap(el: HTMLDivElement): google.maps.Map<HTMLDivElement>;
    setMapElement: (element: HTMLDivElement | null) => void;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=Map.d.ts.map